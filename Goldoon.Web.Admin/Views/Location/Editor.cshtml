@model Goldoon.Models.Basic.Location

<form action="@Url.Action("CreateUpdate", "Location")" method="post" id="dataEntry">
    @if (Model != null && Model.Id != 0)
    {
        @Html.HiddenFor(model => model.Id)
    }
    @Html.HiddenFor(x => x.ParentId)
    @Html.Hidden("returnUrl", (string)ViewBag.returnUrl)

    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationTypeId, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @if (Model != null)
                {
                    @Html.Action("DropDownList", "LocationType", new { Name = "LocationTypeId", SelectedId = Model.LocationTypeId })
                }
                else
                {
                    @Html.Action("DropDownList", "LocationType", new { Name = "LocationTypeId" })
                }
                @Html.ValidationMessageFor(model => model.LocationTypeId, "", new { @class = "text-danger" })
            </div>
        </div>


    </div>
</form>
<script>
    var selectedParentNodeId = $("#selectedLocationId").val();
    var selectedNodeId = $("#Id").val();

    if (selectedNodeId == null) {
        $('#ParentId').val(selectedParentNodeId);
    }

</script>