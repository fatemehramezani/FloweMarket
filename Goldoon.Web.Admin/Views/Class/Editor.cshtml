@model Goldoon.Models.Basic.Class

<form action="@Url.Action("CreateUpdate", "Class")" method="post" id="dataEntry">
    @Html.Hidden("returnUrl", (string)ViewBag.returnUrl)


    @Html.AntiForgeryToken()

    @if (Model != null && Model.Id != 0)
    {
        @Html.HiddenFor(model => model.Id)
    }
    @if (Model != null && Model.TeacherId != 0)
    {//TODO: Add Modal to Select Teacher: Fatemeh Ramezani
        @Html.HiddenFor(model => model.TeacherId)
    }
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.TeacherId, "TeacherId", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownList("TeacherId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TeacherId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", placeholder = "08:00:00" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", placeholder = "10:00:00" } })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Garranty, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Garranty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Garranty, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.HoldingStatusId, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @(Model != null ? Html.Action("DropDownList", "HoldingStatus", new { Name = "HoldingStatusId", SelectedId = Model.HoldingStatusId }) : Html.Action("DropDownList", "HoldingStatus", new { Name = "HoldingStatusId" }))
                @Html.ValidationMessageFor(model => model.HoldingStatusId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EducationalGroupId, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @(Model != null ? Html.Action("DropDownList", "EducationalGroup", new { Name = "EducationalGroupId", SelectedId = Model.HoldingStatusId }) : Html.Action("DropDownList", "EducationalGroup", new { Name = "HoldingStatusId" }))
                @Html.ValidationMessageFor(model => model.EducationalGroupId, "", new { @class = "text-danger" })
            </div>
        </div>
        @*  <div class="form-group">
                @Html.LabelFor(model => model.SystemObjectId, "SystemObjectId", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownList("SystemObjectId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SystemObjectId, "", new { @class = "text-danger" })
                </div>
            </div>*@
    </div>
</form>
