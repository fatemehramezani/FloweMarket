@model Goldoon.Models.General.Question

<form action="@Url.Action("CreateUpdate", "Question")" method="post" id="dataEntry">
        @if (Model!= null && Model.Id != 0)
        { 
             @Html.HiddenFor(model => model.Id)
        }
    @Html.Hidden("returnUrl", (string)ViewBag.returnUrl)


    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.Hidden("EducationalGroupId")

        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.SystemObjectId, "SystemObjectId", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.DropDownList("SystemObjectId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SystemObjectId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        
    </div>
</form>


<script>
    var selectedEducationalGroupId = $("#selectedEducationalGroupId").val();
    $('#EducationalGroupId').val(selectedEducationalGroupId);

</script>
