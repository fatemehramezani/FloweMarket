@model Goldoon.Models.Class.ClassScheduler

<form action="@Url.Action("CreateUpdate", "ClassScheduler")" method="post" id="dataEntry">
    @Html.Hidden("returnUrl", (string)ViewBag.returnUrl)
    @Html.Hidden("ClassId")

    @if (Model != null && Model.Id != 0)
    {
        @Html.HiddenFor(model => model.Id)
    }

    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })



        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>
        @{
            if (Model != null)
            {
                @Html.Action("DropDownList", "HoldingStatus", new { Name = "HoldingStatusId", SelectedId = Model.HoldingStatusId })

            }
            else
            {
                @Html.Action("DropDownList", "HoldingStatus", new { Name = "HoldingStatusId" })

            }

        }


    </div>
</form>
<script>
    var selectedClassId = $("#selectedClassId").val();
    $('#ClassId').val(selectedClassId);
</script>


