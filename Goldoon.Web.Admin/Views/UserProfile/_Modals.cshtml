@model ELearning.Web.ViewModels.PagedSearchViewModel<Goldoon.Models.Users.UserProfile>
<div class="basic-container">
    <div class="basic-header">
        <div>
            @Html.GetPager(this.Model.Entities, string.Format("UserProfile/{0}/Modal", (string)ViewBag.UserRole))
            <ul class="header-buttons">
                <li class="search">
                    <span class="input-icon tooltip-primary" data-toggle="tooltip" data-placement="bottom" data-original-title="جستجوی عنوان">
                        @using (Html.BeginForm(string.Format("UserProfile/{0}/Modal", (string)ViewBag.UserRole), "UserProfile", FormMethod.Get))
                        {
                            @Html.EditorFor(m => m.SearchCriteria, new { @class = "form-control input-sm", @placeholder = "عنوان" })
                        }
                        <i class="glyphicon glyphicon-search lightgray"></i>
                    </span>
                </li>
            </ul>
        </div>
        <div class="pages">
            @((Model.Entities.Paging.PageIndex) * @Model.Entities.Paging.PageSize + 1) - @(Math.Min(Model.Entities.TotalNumberOfItems, (Model.Entities.Paging.PageIndex + 1) * @Model.Entities.Paging.PageSize)) از @Model.Entities.TotalNumberOfItems مورد
        </div>
    </div>
</div>
<div class="dataTables_wrapper form-inline no-footer padding-20">
    @if (this.Model.Entities != null && this.Model.Entities.Any())
    {
        @Html.AutoColumn(this.Model.Entities, string.Format("UserProfile/{0}/Modal", (string)ViewBag.UserRole), "UserProfile_Modal");
    }
</div>

@Html.Hidden("UserRole", (string)ViewBag.UserRole)


<input id="selectedUserId" type="hidden" name="selectedUserId">
<input id="selectedUserProfileId" type="hidden" name="selectedUserProfileId">
<input id="selectedUserIds" type="hidden"  name="selectedUserIds" />
<script>
    $("#UserProfile_Modal_table tr").click(function () {
        SetIds('#UserProfile_Modal_table','UserId');
    });
</script>
<script>
    function SetIds(tableName, fieldName) {
        var Ids = "";
        $(tableName).find('input[type="checkbox"]:checked').each(function (value) {
            Ids += $(this).val() + ",";
        });
        if (Ids != "") {
            fieldName = "#selected" + fieldName + "s";
            $(fieldName).val(Ids);
        }
    }
</script>

